class SavingModPermanentItem : Inventory
{
    Default
    {
        +INVENTORY.UNCLEARABLE;
        +INVENTORY.HUBPOWER;
        +INVENTORY.PERSISTENTPOWER;
        +INVENTORY.IGNORESKILL;
        //+INVENTORY.KEEPDEPLETED;
        //+INVENTORY.INVBAR;
        Inventory.InterHubAmount 1;
        Inventory.MaxAmount 1;
    }
}

struct StyleStruct
{
    enum Name
    {
        Doom,
        DoomAlt,
        Raven,
        Strife,
        Chex,
        Floppy,
        Misato,
        Ashes,
    }
}

mixin class SaveGemInc
{
    //This has to be done here, rather than being dynamic
    //because otherwise the inventory UI completely breaks.
    //But there's nothing stopping the player dropping the item and picking it up again
    /* override void DoEffect() */
    override void AttachToOwner(Actor other)
    {
        if (SSMiscUtils.ShowInInventory())
            bINVBAR = true;
        else
            bINVBAR = false;
        super.AttachToOwner(other);
    }
    
	override bool CanPickup(Actor toucher)
    {
		let max = nosave_items_max;
		if (nosave_items_starting > max)
			max = nosave_items_starting;
        bool allow = toucher.CountInv("SaveGem") < max;
        return allow && super.CanPickup(toucher);
    }
	
    void MakeAutosave(bool showmsg = true)
    {
        if (showmsg)
        {
            SSPrintUtils.Print(Stringtable.Localize("$NOSAVE_SAVED"));
            owner.A_StartSound(UseSound,CHAN_ITEM,CHANF_UI|CHANF_LISTENERZ|CHANF_LOCAL|CHANF_OVERLAP|CHANF_NOPAUSE,1.0,ATTN_NONE);
        }
        UseSound = ""; //Horrible dirty hack to prevent the "Use" sound playing when loading the created autosave.
        LevelLocals.MakeAutoSave();
    }
    
    void DisplayCornerMessage(bool pressAgain = false)
    {
        String text_some = Stringtable.Localize("$NOSAVE_REMAIN");
        String text_one = Stringtable.Localize("$NOSAVE_REMAIN_ONE");
        String text_none = Stringtable.Localize("$NOSAVE_REMAIN_NONE");
        String postfix = Stringtable.Localize("$NOSAVE_REMAIN_POSTFIX");
        
        int amt = pressAgain ? amount : amount - 1;

        String text;
        if (amt > 1)
            text = text_some;
        else if (amt == 1)
            text = text_one;
        else
            text = text_none;

        text = pressAgain ? text.." "..postfix : text;
        
        SSPrintUtils.Print(String.Format(text,amt));
    }

    override bool Use(bool pickup)
    {
        if (!nosave_double_tap)
            DisplayCornerMessage();
        MakeAutosave(true);
        return true;
    }


    override void Tick()
    {
        Super.Tick();
        SetProperties();
    }
 
    override String PickupMessage()
    {
        return SSStyleUtils.GetPickupMessage();
    }

    void SetProperties()
    {
        SSStyleUtils.SetObjectProperties(self);
    }

    void SetFrameInformation(int _frame)
    {
        SetProperties();
        SSStyleUtils.SetObjectFrameInformation(self,_frame);
    }

    States
    {
		Precache:
			//Create temp sprites. See note here:
            //https://zdoom.org/wiki/GetSpriteIndex
            DMES ABCD 1;
            DME2 ABCD 1;
            AKOL A 1;
            FLOP A 1;
            MISA A 1;
            SUBW A 1;
			Stop;
        Spawn:
            //If we are set to auto collect, simply save
            TNT1 A 0
            {
                if (nosave_auto_collect)
                {
                    let player = players[consoleplayer].mo;
                    player.GiveInventory("SaveGem",1);
                    player.A_StartSound(PickupSound,CHAN_ITEM,CHANF_UI|CHANF_LISTENERZ|CHANF_LOCAL|CHANF_OVERLAP|CHANF_NOPAUSE,1.0,ATTN_NONE);
                    SSPrintUtils.Print(PickupMessage());
                    self.Destroy();
                }
            }
            TNT1 A 1 SetFrameInformation(0);
            TNT1 A 1 SetFrameInformation(1);
            TNT1 A 1 SetFrameInformation(2);
            TNT1 A 1 SetFrameInformation(3);
            Loop;
    }
}
